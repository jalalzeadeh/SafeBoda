//
//  FollowingInteractorTests.swift
//  SafeBoda
//
//  Created by Jalal on 10/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import SafeBoda
import XCTest

class FollowingInteractorTests: XCTestCase
{
    // MARK: Subject under test

    var sut: FollowingInteractor!

    // MARK: - Test lifecycle

    override func setUp() {
        super.setUp()
        setupFollowingInteractor()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: - Test setup

    func setupFollowingInteractor() {
        sut = FollowingInteractor()
    }

    // MARK: - Test doubles

    class FollowingPresentationLogicSpy: FollowingPresentationLogic
    {
        var presentSomethingCalled = false

        func presentSomething(response: Following.GetFollowing.Response) {
            presentSomethingCalled = true
        }
    }

    // MARK: - Tests

    func testDoSomething() {
        // Given
        let spy = FollowingPresentationLogicSpy()
        sut.presenter = spy
        let request = Following.GetFollowing.Request()

        // When
        sut.getFollowing(request: request)

        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "doSomething(request:) should ask the presenter to format the result")
    }
}
